{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/SectionTitle/SectionTitle.styled.jsx","components/SectionTitle/SectionTitle.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["Container","styled","div","FeedbackBtn","button","FeedbackOption","options","onLeaveFeedback","map","option","onClick","Text","p","Statistics","good","neutral","bad","total","positivePercentage","Title","h2","SectionTitle","title","children","Message","Notification","message","App","state","handleIncrement","setState","prevState","Object","values","this","reduce","acc","value","countTotalFeedback","Math","round","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEaA,EAAYC,IAAOC,IAAV,iDAITC,EAAcF,IAAOG,OAAV,2P,OCFT,SAASC,EAAT,GAAuD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAChD,OACE,cAACP,EAAD,UACGM,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAACN,EAAD,CAA0BO,QAAS,kBAAMH,EAAgBE,IAAzD,SACGA,GADeA,QCNnB,I,EAAMT,EAAYC,IAAOC,IAAV,iDAITS,EAAOV,IAAOW,EAAV,qECFF,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC9D,OACE,eAAC,EAAD,WACE,eAACP,EAAD,oBAAaG,KACb,eAACH,EAAD,uBAAgBI,KAChB,eAACJ,EAAD,mBAAYK,KACZ,eAACL,EAAD,qBAAcM,KACd,eAACN,EAAD,iCAA0BO,EAA1B,UCTC,I,EAAMC,EAAQlB,IAAOmB,GAAV,4HCEH,SAASC,EAAT,GAA2C,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAC1C,OACI,oCACI,cAACJ,EAAD,UAAQG,IACPC,KCNN,I,EAAMC,EAAUvB,IAAOW,EAAV,kHCEL,SAASa,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OACI,cAACF,EAAD,UAAUE,ICJX,IAAM1B,EAAYC,IAAOC,IAAV,2JCKDyB,E,4MACnBC,MAAQ,CACNd,KAAO,EACPC,QAAS,EACTC,IAAK,G,EAGPa,gBAAkB,SAAApB,GAChB,EAAKqB,UAAS,SAAAC,GACZ,OAAO,eAAGtB,EAASsB,EAAUtB,GAAU,O,wDAI3C,WAEE,OADmBuB,OAAOC,OAAOC,KAAKN,OACpBO,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,K,6CAGxD,WACE,IAAMA,EAAQH,KAAKI,qBAEnB,OAD2BC,KAAKC,MAAON,KAAKN,MAAMd,KAAOuB,EAAS,O,oBAIpE,WACE,MAA+BH,KAAKN,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBqB,EAAQH,KAAKI,qBAGnB,OACE,eAAC,EAAD,WACE,cAACjB,EAAD,CAAcC,MAAM,wBAApB,SACE,cAACjB,EAAD,CACEC,QAAS0B,OAAOS,KAAKP,KAAKN,OAC1BrB,gBAAiB2B,KAAKL,oBAI1B,cAACR,EAAD,CAAcC,MAAM,aAApB,SACc,IAAVe,EACA,cAACZ,EAAD,CAAcC,QAAQ,sBAExB,cAACb,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOoB,EACPnB,mBAAoBgB,KAAKQ,6C,GA/CJC,aCFjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.282fc6c7.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  text-align: left;\n`;\n\nexport const FeedbackBtn = styled.button`\n  margin-right: 15px;\n  padding: 5px;\n\n  font-size: medium;\n  font-weight: 700;\n  text-transform: capitalize;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #4b89e7;\n  }\n`;","import React from 'react';\nimport { Container, FeedbackBtn } from './FeedbackOptions.styled.jsx';\nimport PropTypes from 'prop-types';\n\nexport default function FeedbackOption({ options, onLeaveFeedback }) {\n  return (\n    <Container>\n      {options.map(option => (\n        <FeedbackBtn key={option} onClick={() => onLeaveFeedback(option)}>\n          {option}\n        </FeedbackBtn>\n      ))}\n    </Container>\n  );\n}\n\nFeedbackOption.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string),\n    onLeaveFeedback: PropTypes.func.isRequired,\n}","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  text-align: left;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Text } from './Statistics.styled';\n\nexport default function Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <Container>\n      <Text>Good: {good}</Text>\n      <Text>Neutral: {neutral}</Text>\n      <Text>Bad: {bad}</Text>\n      <Text>Total: {total}</Text>\n      <Text>Positive feedback: {positivePercentage}%</Text>\n    </Container>\n  );\n}\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n}\n","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h2`\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  text-align: left;\r\n  text-transform: uppercase;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Title } from './SectionTitle.styled';\r\n\r\nexport default function SectionTitle ({title, children}) {\r\n    return (\r\n        <section>\r\n            <Title>{title}</Title>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSectionTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n}","import styled from '@emotion/styled';\r\n\r\nexport const Message = styled.p`\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  font-size: 20px;\r\n  text-align: left;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Message } from './Notification.styled';\r\n\r\nexport default function Notification({ message }) {\r\n    return (\r\n        <Message>{message}</Message>\r\n    );\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 300px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 50px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;","import React, { Component } from 'react';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Statistics from '../Statistics';\nimport SectionTitle from '../SectionTitle';\nimport Notification from '../Notification';\nimport { Container } from './App.styled';\n\nexport default class App extends Component {\n  state = {\n    good : 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = option => {\n    this.setState(prevState => {\n      return { [option]: prevState[option] + 1 };\n    });\n  };\n\n  countTotalFeedback() {\n    const totalValue = Object.values(this.state);\n    return totalValue.reduce((acc, value) => acc + value, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    const value = this.countTotalFeedback();\n    const positivePercentage = Math.round((this.state.good / value) * 100);\n    return positivePercentage;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const value = this.countTotalFeedback();\n\n\n    return (\n      <Container>\n        <SectionTitle title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </SectionTitle>\n\n        <SectionTitle title=\"Statistics\">\n           {value === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={value}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n              />\n                )}\n        </SectionTitle>\n      </Container>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}